{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\New Movie Project\\\\MovieBookingWebsite\\\\movie\\\\src\\\\components\\\\System_AddTheatre.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Form, Button, Row, Col } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddTheater() {\n  _s();\n  // State variables to hold form field values and validation errors\n  const [theaterInfo, setTheaterInfo] = useState({\n    theaterId: \"\",\n    theaterName: \"\",\n    location: \"\",\n    totalSeats: \"\",\n    screenCount: \"\"\n  });\n  const [errors, setErrors] = useState({});\n\n  // Function to handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Validation logic\n    const validationErrors = {};\n    if (!theaterInfo.theaterId) {\n      validationErrors.theaterId = \"Theater ID is required\";\n    }\n    // Add more validation logic for other fields if needed\n\n    // If there are validation errors, set them in state and prevent form submission\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n    // If no errors, proceed with submitting the form data\n    console.log(\"Form submitted:\", theaterInfo);\n    // You can add logic here to send the theaterInfo to the server\n  };\n\n  // Function to handle input changes\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setTheaterInfo(prevInfo => ({\n      ...prevInfo,\n      [name]: value\n    }));\n    // Clear the error message for the field being changed\n    setErrors(prevErrors => ({\n      ...prevErrors,\n      [name]: \"\"\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-md-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center mb-4\",\n          children: \"Add Theatre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"theaterId\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Theater ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"theaterId\",\n              value: theaterInfo.theaterId,\n              onChange: handleChange,\n              isInvalid: !!errors.theaterId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: errors.theaterId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-3 justify-content-md-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/logout\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(AddTheater, \"VaErYRkBReCvi8VrmFDS0YC2QGs=\");\n_c = AddTheater;\nvar _c;\n$RefreshReg$(_c, \"AddTheater\");","map":{"version":3,"names":["React","useState","Link","Container","Form","Button","Row","Col","jsxDEV","_jsxDEV","AddTheater","_s","theaterInfo","setTheaterInfo","theaterId","theaterName","location","totalSeats","screenCount","errors","setErrors","handleSubmit","e","preventDefault","validationErrors","Object","keys","length","console","log","handleChange","name","value","target","prevInfo","prevErrors","children","className","xs","md","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","controlId","Label","Control","type","onChange","isInvalid","Feedback","variant","to","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/New Movie Project/MovieBookingWebsite/movie/src/components/System_AddTheatre.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Form, Button, Row, Col } from \"react-bootstrap\";\r\n\r\nexport default function AddTheater() {\r\n  // State variables to hold form field values and validation errors\r\n  const [theaterInfo, setTheaterInfo] = useState({\r\n    theaterId: \"\",\r\n    theaterName: \"\",\r\n    location: \"\",\r\n    totalSeats: \"\",\r\n    screenCount: \"\"\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  // Function to handle form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Validation logic\r\n    const validationErrors = {};\r\n    if (!theaterInfo.theaterId) {\r\n      validationErrors.theaterId = \"Theater ID is required\";\r\n    }\r\n    // Add more validation logic for other fields if needed\r\n    \r\n    // If there are validation errors, set them in state and prevent form submission\r\n    if (Object.keys(validationErrors).length > 0) {\r\n      setErrors(validationErrors);\r\n      return;\r\n    }\r\n    // If no errors, proceed with submitting the form data\r\n    console.log(\"Form submitted:\", theaterInfo);\r\n    // You can add logic here to send the theaterInfo to the server\r\n  };\r\n\r\n  // Function to handle input changes\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setTheaterInfo((prevInfo) => ({\r\n      ...prevInfo,\r\n      [name]: value\r\n    }));\r\n    // Clear the error message for the field being changed\r\n    setErrors((prevErrors) => ({\r\n      ...prevErrors,\r\n      [name]: \"\"\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={6}>\r\n          <h1 className=\"text-center mb-4\">Add Theatre</h1>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group controlId=\"theaterId\">\r\n              <Form.Label>Theater ID:</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"theaterId\"\r\n                value={theaterInfo.theaterId}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.theaterId}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.theaterId}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            {/* Add similar Form.Group components for other theater information */}\r\n            \r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mt-3 justify-content-md-center\">\r\n        <Col xs=\"auto\">\r\n          <Link to=\"/logout\">Logout</Link>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}